variables:
  PAGES_DEPLOY: public/${CI_COMMIT_REF_NAME}
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/releases/${CI_COMMIT_TAG}"

stages:
  - build
  - test
  - deploy
  - build-release
  - upload-release
  - release


# Select what we should cache
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

# Run phpunit tests for php 7.3
php73-tests:
  stage: test
  image: klodoma/php73
  script:
    - composer install
    - vendor/bin/phpunit

# Run phpunit tests for php 7.4
php74-tests:
  stage: test
  image: klodoma/php74
  script:
    - composer install
    - vendor/bin/phpunit --configuration phpunit-ci.xml
    - vendor/bin/phpmetrics --report-html=./build/php/phpmetrics ./library/interpid/PdfLib
  coverage: '/Lines:\s*(\d+\.\d+)/'
  artifacts:
    paths:
      - build
    expire_in: 1 year

# Run phpunit tests for php 80
php80-tests:
  stage: test
  image: klodoma/php80
  script:
    - composer install
    - vendor/bin/phpunit

#pages:
#  stage: deploy
#  script:
#    - mkdir -p ${PAGES_DEPLOY}
#    - cp -r build/* ${PAGES_DEPLOY}
#  artifacts:
#    paths:
#      - ${PAGES_DEPLOY}

# Run the release build
build-release:
  stage: build-release
  image: klodoma/php74
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - php ./bin/build-release.php
    - source ./bin/set-versions.sh
  artifacts:
    paths:
      - release
      - $VARIABLES_FILE
    expire_in: 1 year

upload-release:
  stage: upload-release
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - source ./bin/set-versions.sh
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./release/fpdf-table-${VERSION_TABLE}.zip ${PACKAGE_REGISTRY_URL}/fpdf-table-${VERSION_TABLE}.zip
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ./release/fpdf-multicell-${VERSION_MULTICELL}.zip ${PACKAGE_REGISTRY_URL}/fpdf-multicell-${VERSION_MULTICELL}.zip

create-release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG                  # Run this job when a tag is created manually
  script:
    - source ./bin/set-versions.sh
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"fpdf-table-${VERSION_TABLE}.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}/fpdf-table-${VERSION_TABLE}.zip\"}" \
        --assets-link "{\"name\":\"fpdf-multicell-${VERSION_MULTICELL}.zip\",\"url\":\"${PACKAGE_REGISTRY_URL}/fpdf-multicell-${VERSION_MULTICELL}.zip\"}" \
